name: Deploy CoffeeLeaves

on:
  push:
    branches: [ "main", "wip", "w_dynamo_db" ]
  workflow_dispatch:
jobs:
  deploy-containers:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the detection image to Amazon ECR
      id: build-image-detection
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_REPO_NAME }}
        IMAGE_TAG: lambda_detection_tf_v1 #:${{github.run_number}}
      run: |
        # Build a docker container and push it to ECR
        cd src/detection/
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing detection image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  
    - name: Build, tag, and push the weather image to Amazon ECR
      id: build-image-weather
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_REPO_NAME }}
        IMAGE_TAG: "lambda_weather_v1"
      run: |
        # Build a docker container and push it to ECR
        cd src/weather/
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing weather image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Setup Terraform state
      run: |
        cd infrastructure
        sh setup_terraform_state_bucket.sh
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    - name: Terraform init - apply
      id: apply
      env: 
        API_KEY: ${{ secrets.API_KEY }}
      run: |
        cd infrastructure
        terraform init
        terraform apply -var="weather_api_key=$API_KEY" -auto-approve
